name: Build & Deploy

on:
  push:
  workflow_dispatch: 

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CARGO_TERM_COLOR: always


jobs:
  build:
    uses: ./.github/workflows/build.yml

  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    steps:
      - name: Get artifacts
        uses: actions/download-artifact@v4
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Load x86_64 image
        run: |
          docker load -i oci-image-x86_64-linux/result
          echo "${{ steps.meta.outputs.tags }}" | while IFS= read -r tag; do
            docker tag $(docker images -q telegram-cjk-search-bot:latest) $tag-x86_64
          done
      - name: Load aarch_64 image
        run: |
          docker load -i oci-image-aarch64-linux/result
          echo "${{ steps.meta.outputs.tags }}" | while IFS= read -r tag; do
            docker tag $(docker images -q telegram-cjk-search-bot:latest) $tag-aarch64
          done
      - name: Push images
        run: |
          docker push --all-tags ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Create and push multi-arch manifest
        run: |
          echo "${{ steps.meta.outputs.tags }}" | while IFS= read -r tag; do
            docker manifest create $tag \
              -a $tag-x86_64 \
              -a $tag-aarch64
            docker manifest push $tag
          done

  ssh-deploy:
    runs-on: self-hosted
    needs: [ build, publish ]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: >
            cd ./telegram-cjk-search-bot &&
            sudo docker compose pull &&
            sudo docker compose up -d
